diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml
index 42b0581..54e767b 100644
--- a/.github/workflows/ci.yml
+++ b/.github/workflows/ci.yml
@@ -3,22 +3,54 @@ name: CI
 on: [push]
 
 env:
-  OTP_VERSION: 28.1.1
-  ELIXIR_VERSION: 1.18.4-otp-28
-  NERVES_BOOTSTRAP_VERSION: 1.14.0
+  OTP_VERSION: 27.3.4.2
+  ELIXIR_VERSION: 1.18.4-otp-27
+  NERVES_BOOTSTRAP_VERSION: 1.13.1
 
 permissions:
   id-token: write
   contents: read
 
 jobs:
+  # 1) REUSE license compliance
+  reuse:
+    name: REUSE Compliance Check
+    runs-on: ubuntu-22.04
+    steps:
+      - uses: actions/checkout@v4
+        with:
+          fetch-depth: 0
+      - name: REUSE lint
+        uses: fsfe/reuse-action@v3
+
+  # 2) Prefetch Buildroot dependencies (and optionally publish to your bucket)
   get-br-dependencies:
+    name: Get Buildroot Dependencies
+    needs: [reuse]
     runs-on: ubuntu-22.04
+    env:
+      BR2_PRIMARY_SITE: https://sources.buildroot.net
+      BR2_DL_DIR: ${{ runner.temp }}/br_dl
     steps:
       - uses: actions/checkout@v4
+        with:
+          fetch-depth: 0
+
+      - name: Cache Buildroot downloads
+        uses: actions/cache@v4
+        with:
+          path: ${{ env.BR2_DL_DIR }}
+          key: br-dl-${{ runner.os }}-${{ hashFiles('**/nerves_defconfig', '**/linux-*.defconfig') }}
+          restore-keys: |
+            br-dl-${{ runner.os }}-
+
       - uses: gridpoint-com/actions-nerves-system@v1
-      - name: Get Buildroot Dependencies
+
+      - name: Prefetch Buildroot dependencies
         uses: ./.actions/get-br-dependencies
+        env:
+          BR2_PRIMARY_SITE: ${{ env.BR2_PRIMARY_SITE }}
+          BR2_DL_DIR: ${{ env.BR2_DL_DIR }}
         with:
           otp-version: ${{ env.OTP_VERSION }}
           elixir-version: ${{ env.ELIXIR_VERSION }}
@@ -27,28 +59,77 @@ jobs:
           download-site-bucket-uri: ${{ vars.DOWNLOAD_SITE_BUCKET_URI }}
           aws-role: ${{ secrets.AWS_ROLE }}
           aws-region: ${{ vars.AWS_REGION }}
+
+  # 3) Build the Nerves system artifact
   build-system:
+    name: Build Nerves System
     needs: [get-br-dependencies]
     runs-on: ubuntu-22.04
+    env:
+      BR2_PRIMARY_SITE: https://sources.buildroot.net
+      BR2_DL_DIR: ${{ runner.temp }}/br_dl
     steps:
       - uses: actions/checkout@v4
+        with:
+          fetch-depth: 0
+
+      - name: Restore Buildroot downloads cache
+        uses: actions/cache@v4
+        with:
+          path: ${{ env.BR2_DL_DIR }}
+          key: br-dl-${{ runner.os }}-${{ hashFiles('**/nerves_defconfig', '**/linux-*.defconfig') }}
+          restore-keys: |
+            br-dl-${{ runner.os }}-
+
       - uses: gridpoint-com/actions-nerves-system@v1
-      - name: Build nerves_system
+
+      - name: Build Nerves system
         uses: ./.actions/build-system
+        env:
+          BR2_PRIMARY_SITE: ${{ env.BR2_PRIMARY_SITE }}
+          BR2_DL_DIR: ${{ env.BR2_DL_DIR }}
         with:
           otp-version: ${{ env.OTP_VERSION }}
           elixir-version: ${{ env.ELIXIR_VERSION }}
           nerves-bootstrap-version: ${{ env.NERVES_BOOTSTRAP_VERSION }}
+
+  # 4) Deploy on tags: attach *.tar.gz (and checksums) to the GitHub Release
   deploy-system:
+    name: Deploy Nerves System
     needs: [build-system]
-    if: github.ref_type == 'tag'
+    if: startsWith(github.ref, 'refs/tags/')
     runs-on: ubuntu-22.04
     permissions:
       contents: write
     steps:
       - uses: actions/checkout@v4
+        with:
+          fetch-depth: 0
+
       - uses: gridpoint-com/actions-nerves-system@v1
-      - name: Deploy nerves_system
+
+      - name: Deploy via composite action (if you need it)
         uses: ./.actions/deploy-system
         with:
           github-token: ${{ secrets.GITHUB_TOKEN }}
+
+      # Find & upload the built artifact(s) to the GitHub Release
+      - name: Compute checksums
+        run: |
+          set -euo pipefail
+          shopt -s nullglob
+          mkdir -p release_upload
+          for f in _build/**/nerves/images/*.tar.gz; do
+            cp "$f" release_upload/
+            (cd release_upload && sha256sum "$(basename "$f")" > "$(basename "$f").sha256")
+          done
+          ls -l release_upload
+
+      - name: Upload assets to GitHub Release
+        uses: softprops/action-gh-release@v2
+        with:
+          files: |
+            release_upload/*.tar.gz
+            release_upload/*.sha256
+        env:
+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
diff --git a/.gitignore b/.gitignore
index 3a1fe8f..7a7af2d 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,22 +1,45 @@
-# The directory Mix will write compiled artifacts to.
+# Mix / Elixir build artifacts
 /_build/
+.cover/
+deps/
+doc/
+.fetch
+erl_crash.dump
+/.nerves
 
-# If you run "mix test --cover", coverage assets end up here.
-/cover/
+# Buildroot and Nerves system outputs
+output/
+images/
+dl/
+tmp/
+build.log
+archive.log
+.br2-external.cache
+.br-deps/
+.br-external/
 
-# The directory Mix downloads your dependencies sources to.
-/deps/
+# Kernel and build intermediates
+linux-*/.config.old
+linux-*/.tmp_versions/
+linux-*/Module.symvers
+linux-*/modules.order
+linux-*/built-in.a
+linux-*/System.map
 
-# Where 3rd-party dependencies like ExDoc output generated docs.
-/doc/
+# Firmware bundles
+*.fw
+*.fw.zip
+*.img
+*.bin
 
-# Ignore .fetch files in case you like to edit your project deps locally.
-/.fetch
+# IDE/editor noise
+*.swp
+*.swo
+*~
+.DS_Store
+.idea/
+.vscode/
 
-# If the VM crashes, it generates a dump, let's ignore it too.
-erl_crash.dump
-
-# Ignore our generated files
-/build.log
-/archive.log
-/.nerves
+# Misc local experiments
+*.bak
+*.tar.gz
diff --git a/LICENSES/Apache-2.0.txt b/LICENSES/Apache-2.0.txt
new file mode 100644
index 0000000..b4d30fb
--- /dev/null
+++ b/LICENSES/Apache-2.0.txt
@@ -0,0 +1,108 @@
+Linux Foundation Collaborative Projects
+Home
+Home Â» Licenses
+Apache License 2.0
+Full name
+
+Apache License 2.0
+Short identifier
+
+Apache-2.0
+Other web pages for this license
+
+    https://www.apache.org/licenses/LICENSE-2.0
+    https://opensource.org/licenses/Apache-2.0
+    https://opensource.org/license/apache-2-0
+
+Notes
+
+This license was released January 2004
+Text
+
+    Text in italicized blue is omittable (see Matching Guidelines B.3.5). License or exception text will match to the text for the specified identifier if it either includes or excludes this omittable text.
+
+    Text in red is replaceable (see Matching Guidelines B.3.4). License or exception text will match to the text for the specified identifier if it includes a permitted variant of this replaceable text. The permitted variants can be found in the corresponding regular expression as shown in title text visible by hovering over the red text.
+
+Apache License
+Version 2.0, January 2004
+http://www.apache.org/licenses/
+
+TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+    1. Definitions.
+
+        "License" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.
+
+        "Licensor" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.
+
+        "Legal Entity" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, "control" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.
+
+        "You" (or "Your") shall mean an individual or Legal Entity exercising permissions granted by this License.
+
+        "Source" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.
+
+        "Object" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.
+
+        "Work" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).
+
+        "Derivative Works" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.
+
+        "Contribution" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, "submitted" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as "Not a Contribution."
+
+        "Contributor" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.
+    2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.
+    3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.
+    4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:
+        (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and
+        (b) You must cause any modified files to carry prominent notices stating that You changed the files; and
+        (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and
+        (d) If the Work includes a "NOTICE" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.
+
+    You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.
+    5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.
+    6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.
+    7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.
+    8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.
+    9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.
+
+END OF TERMS AND CONDITIONS
+
+APPENDIX: How to apply the Apache License to your work.
+
+To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets "[]" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same "printed page" as the copyright notice for easier identification within third-party archives.
+
+Copyright [yyyy] [name of copyright owner]
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+Standard License Header
+
+Copyright [yyyy] [name of copyright owner]
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+
+Â© 2018 SPDX Workgroup a Linux Foundation Project. All Rights Reserved.
+
+Linux Foundation is a registered trademark of The Linux Foundation. Linux is a registered trademark of Linus Torvalds.
+
+Please see our privacy policy and terms of use.
+top of page
diff --git a/README_CEC.md b/README_CEC.md
new file mode 100644
index 0000000..2222165
--- /dev/null
+++ b/README_CEC.md
@@ -0,0 +1,106 @@
+<!-- SPDX-FileCopyrightText: 2025 Bryan Green -->
+<!-- SPDX-License-Identifier: Apache-2.0 -->
+# Nerves System: Raspberry Pi 4 with HDMI-CEC Support
+
+This is a **custom Nerves system** for the Raspberry Pi 4 that enables reliable
+HDMI and CEC (Consumer Electronics Control) support out of the box.
+
+Itâs based on the official [`nerves_system_rpi4`](https://github.com/nerves-project/nerves_system_rpi4)
+with kernel and Buildroot tweaks to make `/dev/cec0` and `cec-ctl` available at boot.
+
+---
+
+## ð§ Features
+
+- **HDMI CEC enabled** (`vc4_hdmi_cec` built-in, not as module)
+- **KMS driver active** (`dtoverlay=vc4-kms-v3d`)
+- **HDMI hotplug forced** (so video stays up even without EDID)
+- **`v4l-utils`** included â provides the `cec-ctl` command
+- **`hdmi_ignore_cec_init=1`** prevents unwanted input switching on boot
+- Console output on HDMI (`tty1`)
+
+---
+
+## ð§° Kernel Config Highlights
+
+```
+CONFIG_DRM_VC4=y
+CONFIG_DRM_VC4_HDMI_CEC=y
+CONFIG_MEDIA_CEC_SUPPORT=y
+CONFIG_CEC_CORE=y
+CONFIG_CEC_NOTIFIER=y
+```
+
+---
+
+## âï¸ Boot Configuration (`boot/config.txt`)
+
+```
+# Force HDMI output
+hdmi_force_hotplug=1
+hdmi_drive=2
+
+# Enable KMS + CEC
+dtoverlay=vc4-kms-v3d
+
+# Prevent auto input switch during firmware init
+hdmi_ignore_cec_init=1
+```
+
+---
+
+## ð§© Buildroot Additions
+
+```
+BR2_PACKAGE_V4L_UTILS=y   # provides cec-ctl
+BR2_PACKAGE_TZDATA=y      # optional: time zone data
+```
+
+---
+
+## ð Using in a Nerves App
+
+In your applicationâs `mix.exs`:
+
+```
+{:nerves_system_rpi4_cec,
+  github: "codestorm1/nerves_system_rpi4_cec",
+  tag: "v1.0.0",
+  runtime: false,
+  targets: :rpi4}
+```
+
+Then:
+
+```
+MIX_TARGET=rpi4 mix deps.get
+MIX_TARGET=rpi4 mix firmware
+mix upload nerves.local
+```
+
+After boot, test CEC:
+
+```
+ssh nerves.local
+cec-ctl -d0 --cec-version-1.4 --playback --osd-name Mutebox
+cec-ctl -d0 --show-topology
+```
+
+---
+
+## ð§¹ Notes
+
+- Artifacts like `.tar.gz`, `.img`, and Buildroot outputs are ignored to keep the repo small.
+- To share pre-built images, attach them to GitHub **Releases** instead of committing them.
+- Buildroot caches (`buildroot/dl`, `output/`, etc.) are intentionally untracked.
+
+---
+
+## ð· Versioning
+
+- **v1.0.0** â initial release with CEC/HDMI/KMS support
+
+---
+
+Maintained by **codestorm1** Â·  
+Based on the official Nerves Raspberry Pi 4 system.
diff --git a/VERSION b/VERSION
index cca5268..ac37e17 100644
--- a/VERSION
+++ b/VERSION
@@ -1 +1 @@
-1.31.4
+1.32.0-cec.4
diff --git a/config.txt b/config.txt
deleted file mode 100644
index fe5aebc..0000000
--- a/config.txt
+++ /dev/null
@@ -1,73 +0,0 @@
-# Default Nerves RPi 4 config.txt
-#
-# It's possible to override this file by using a custom fwup.conf
-# configuration to pull in a replacement.
-#
-# Useful links:
-# http://rpf.io/configtxt
-# https://www.raspberrypi.org/documentation/configuration/device-tree.md
-# https://github.com/raspberrypi/documentation/blob/master/configuration/device-tree.md
-# https://github.com/raspberrypi/firmware/blob/master/boot/overlays/README
-
-# Enable 64-bit support
-arm_64bit=1
-
-# We always use the same names. The variant is selected in fwup.conf.
-start_file=start4.elf
-fixup_file=fixup4.dat
-
-# Disable the boot rainbow
-disable_splash=1
-
-# This, along with the Raspberry Pi "x" firmware is needed for the camera
-# to work. The Raspberry Pi "x" firmware is selected via the Buildroot
-# configuration. See Target packages->Hardware handling->Firmware.
-gpu_mem=192
-
-# Enable I2C and SPI
-dtparam=i2c_arm=on
-dtparam=spi=on
-
-# Enable audio (loads snd_bcm3825)
-dtparam=audio=on
-
-# Automatically load overlays for detected cameras
-camera_auto_detect=1
-
-# Automatically load overlays for detected DSI displays
-display_auto_detect=1
-
-# Enable DRM VC4 V3D driver
-dtoverlay=vc4-kms-v3d
-max_framebuffers=2
-
-# Don't have the firmware create an initial video= setting in cmdline.txt.
-# Use the kernel's default instead.
-disable_fw_kms_setup=1
-
-# Disable compensation for displays with overscan
-disable_overscan=1
-
-# Comment this in or modify to enable OneWire
-# NOTE: check that the overlay that you specify is in the boot partition or
-#       this won't work.
-#dtoverlay=w1-gpio-pullup,gpiopin=4
-
-# Support USB gadget mode on the USB-C port
-dtoverlay=dwc2
-
-# The ramoops overlay works with the pstore driver to preserve crash
-# information across reboots in DRAM
-dtoverlay=ramoops
-
-# Enable the UART (/dev/ttyS0)
-enable_uart=1
-
-# Comment this in or modify to enable PWM
-# dtoverlay=pwm
-
-[cm4]
-# Raspberry Pi CM4-only settings
-
-# For the CM4 I/O board, USB is disabled by default. This enables it.
-dtoverlay=dwc2,dr_mode=host
diff --git a/mix.exs b/mix.exs
index 74b1a69..007a331 100644
--- a/mix.exs
+++ b/mix.exs
@@ -67,7 +67,7 @@ defmodule NervesSystemRpi4.MixProject do
   defp deps do
     [
       {:nerves, "~> 1.11", runtime: false},
-      {:nerves_system_br, "1.32.3", runtime: false},
+      {:nerves_system_br, "1.31.7", runtime: false},
       {:nerves_toolchain_aarch64_nerves_linux_gnu, "~> 13.2.0", runtime: false},
       {:nerves_system_linter, "~> 0.4", only: [:dev, :test], runtime: false},
       {:ex_doc, "~> 0.22", only: :docs, runtime: false}
diff --git a/mix.lock b/mix.lock
index d9287ff..52f4018 100644
--- a/mix.lock
+++ b/mix.lock
@@ -8,8 +8,8 @@
   "makeup_elixir": {:hex, :makeup_elixir, "1.0.1", "e928a4f984e795e41e3abd27bfc09f51db16ab8ba1aebdba2b3a575437efafc2", [:mix], [{:makeup, "~> 1.0", [hex: :makeup, repo: "hexpm", optional: false]}, {:nimble_parsec, "~> 1.2.3 or ~> 1.3", [hex: :nimble_parsec, repo: "hexpm", optional: false]}], "hexpm", "7284900d412a3e5cfd97fdaed4f5ed389b8f2b4cb49efc0eb3bd10e2febf9507"},
   "makeup_erlang": {:hex, :makeup_erlang, "1.0.2", "03e1804074b3aa64d5fad7aa64601ed0fb395337b982d9bcf04029d68d51b6a7", [:mix], [{:makeup, "~> 1.0", [hex: :makeup, repo: "hexpm", optional: false]}], "hexpm", "af33ff7ef368d5893e4a267933e7744e46ce3cf1f61e2dccf53a111ed3aa3727"},
   "nerves": {:hex, :nerves, "1.11.3", "437aa0a961ff8583e7f377342662495cdb90af42a473ae4d76449917bd12c386", [:make, :mix], [{:castore, "~> 0.1 or ~> 1.0", [hex: :castore, repo: "hexpm", optional: false]}, {:elixir_make, "~> 0.6", [hex: :elixir_make, repo: "hexpm", optional: false]}, {:jason, "~> 1.2", [hex: :jason, repo: "hexpm", optional: false]}], "hexpm", "ef2076e0c0cb2c95421d12fd9069942c0ad73f3c77c0d6bb2cfb18972dacf675"},
-  "nerves_system_br": {:hex, :nerves_system_br, "1.32.3", "923ba1c80b563fc8c21d24205fee0d65dde4e7d9c49af26f17cd77385af00283", [:mix], [], "hexpm", "ede92a881e1bb9bdba5d17a0fda4ce41fa8aacaf77866c547706c720fbbcfcfa"},
-  "nerves_system_linter": {:hex, :nerves_system_linter, "0.4.1", "9a06eaf2402f1becdc130c6ce0ce877dc5201315fa7994f3779ed940d5a0c475", [:mix], [], "hexpm", "11bb0edb5849bf0979b7921726728d2d68f2bc0d2173d30547e9308a6ad484a0"},
+  "nerves_system_br": {:hex, :nerves_system_br, "1.31.7", "79c02e00b66dd347fc143b09162fa923216d8a3bcfc427ad96c8989c9d08b22b", [:mix], [], "hexpm", "b6940799dfd1ec214b162826c8d940577c25d5f0af0e3ad867a71edff7d64732"},
+  "nerves_system_linter": {:hex, :nerves_system_linter, "0.4.0", "81e9a6f5018fe5fb67d7b43a04dca36156f62b55b5554eb2fa3964d3889d09cd", [:mix], [], "hexpm", "b5bd8480ce7a6317f4601ff41fd2f594bdf76aff0bdf6dcfac571c3fa1ec5f82"},
   "nerves_toolchain_aarch64_nerves_linux_gnu": {:hex, :nerves_toolchain_aarch64_nerves_linux_gnu, "13.2.0", "68fcd2c21c86cceb9545948fae052d72f88b7c7c10205b252dac88559e2a3369", [:mix], [{:nerves, "~> 1.4", [hex: :nerves, repo: "hexpm", optional: false]}, {:nerves_toolchain_ctng, "~> 1.10.0", [hex: :nerves_toolchain_ctng, repo: "hexpm", optional: false]}], "hexpm", "f92212606919a062f975e7bd82ed8a1b95bd4864abb3444cd0d5d0e610e94cc5"},
   "nerves_toolchain_ctng": {:hex, :nerves_toolchain_ctng, "1.10.0", "c6b35377a0b7a93633a8673a788f1580fe1fa06083374b0e4df36da65828d2ef", [:mix], [{:nerves, "~> 1.0", [hex: :nerves, repo: "hexpm", optional: false]}], "hexpm", "e4ae1a2b84de3502ecac195765819be0ce2834eb276553163a7c03133f1760f1"},
   "nimble_parsec": {:hex, :nimble_parsec, "1.4.2", "8efba0122db06df95bfaa78f791344a89352ba04baedd3849593bfce4d0dc1c6", [:mix], [], "hexpm", "4b21398942dda052b403bbe1da991ccd03a053668d147d53fb8c4e0efe09c973"},
diff --git a/nerves_defconfig b/nerves_defconfig
index b67c217..250325e 100644
--- a/nerves_defconfig
+++ b/nerves_defconfig
@@ -38,6 +38,21 @@ BR2_LINUX_KERNEL_INTREE_DTS_NAME="broadcom/bcm2711-rpi-4-b broadcom/bcm2711-rpi-
 BR2_LINUX_KERNEL_CUSTOM_DTS_PATH="${NERVES_DEFCONFIG_DIR}/ramoops.dts"
 BR2_LINUX_KERNEL_NEEDS_HOST_OPENSSL=y
 BR2_PACKAGE_BUSYBOX_CONFIG="${BR2_EXTERNAL_NERVES_PATH}/board/nerves-common/busybox.config"
+
+# HDMI-CEC and utilities
+BR2_PACKAGE_LIBCEC=y
+BR2_PACKAGE_LIBCEC_UTILS=y
+BR2_PACKAGE_LIBV4L=y
+BR2_PACKAGE_LIBV4L_UTILS=y
+
+# audio tools
+BR2_PACKAGE_ALSA_UTILS_ARECORD=y
+BR2_PACKAGE_SOX=y
+BR2_PACKAGE_FFTW=y
+
+# audio fingerprinting
+BR2_PACKAGE_CHROMAPRINT=y
+
 BR2_PACKAGE_ALSA_UTILS=y
 # BR2_PACKAGE_ALSA_UTILS_ALSAMIXER is not set
 BR2_PACKAGE_ALSA_UTILS_AMIXER=y
@@ -50,6 +65,7 @@ BR2_PACKAGE_RPI_FIRMWARE=y
 BR2_PACKAGE_RPI_FIRMWARE_CUSTOM_VERSION="1.20250127"
 BR2_PACKAGE_RPI_FIRMWARE_VARIANT_PI4_X=y
 BR2_PACKAGE_PIGPIO=y
+# BR2_PACKAGE_RNG_TOOLS_JITTERENTROPY_LIBRARY is not set
 BR2_PACKAGE_RPI_USERLAND=y
 # BR2_PACKAGE_ALSA_LIB_RAWMIDI is not set
 # BR2_PACKAGE_ALSA_LIB_HWDEP is not set
@@ -78,7 +94,6 @@ BR2_NERVES_SYSTEM_NAME="nerves_system_rpi4"
 BR2_NERVES_ADDITIONAL_IMAGE_FILES="${NERVES_DEFCONFIG_DIR}/fwup.conf ${NERVES_DEFCONFIG_DIR}/cmdline.txt ${NERVES_DEFCONFIG_DIR}/config.txt"
 BR2_PACKAGE_NBTTY=y
 BR2_PACKAGE_NERVES_CONFIG=y
-BR2_PACKAGE_NERVES_CONFIG_ACCEPT_RNG_NOTICE=y
 BR2_PACKAGE_RPICAM_APPS=y
 BR2_PACKAGE_RPI_DISTRO_FIRMWARE_NONFREE=y
 BR2_PACKAGE_RPI_LIBCAMERA_V4L2=y
diff --git a/rootfs_overlay/boot/config.txt b/rootfs_overlay/boot/config.txt
new file mode 100644
index 0000000..5fe264e
--- /dev/null
+++ b/rootfs_overlay/boot/config.txt
@@ -0,0 +1,10 @@
+# SPDX-FileCopyrightText: 2025 Bryan Green
+# SPDX-License-Identifier: CC0-1.0
+
+dtoverlay=vc4-kms-v3d,cec
+hdmi_force_hotplug=1
+disable_overscan=1
+gpu_mem=192
+
+# add this if GPU is blocking access to CEC
+#hdmi_ignore_cec_init=1
diff --git a/rootfs_overlay/etc/erlinit.config b/rootfs_overlay/etc/erlinit.config
index 12c8a80..451d9b4 100644
--- a/rootfs_overlay/etc/erlinit.config
+++ b/rootfs_overlay/etc/erlinit.config
@@ -20,6 +20,13 @@
 # Comment out or delete for HDMI (tty1)
 -s "/usr/bin/nbtty"
 
+# There's a call to getrandom(2) when loading the crypto NIF that's before
+# nerves_runtime can start rngd. This syscall can block the BEAM indefinitely
+# if there's not enough entropy in the kernel. We have not observed blocking on
+# this platform. However, we don't know that getrandom(2) will always have
+# enough entropy, so start rngd here to be safe.
+--pre-run-exec /usr/sbin/rngd
+
 # Specify the user and group IDs for the Erlang VM
 #--uid 100
 #--gid 200
